/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/v1/spanner.proto

package com.google.spanner.v1;

/**
 *
 *
 * <pre>
 * The request for [Read][google.spanner.v1.Spanner.Read] and
 * [StreamingRead][google.spanner.v1.Spanner.StreamingRead].
 * </pre>
 *
 * Protobuf type {@code google.spanner.v1.ReadRequest}
 */
public final class ReadRequest extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.spanner.v1.ReadRequest)
    ReadRequestOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use ReadRequest.newBuilder() to construct.
  private ReadRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ReadRequest() {
    session_ = "";
    table_ = "";
    index_ = "";
    columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    resumeToken_ = com.google.protobuf.ByteString.EMPTY;
    partitionToken_ = com.google.protobuf.ByteString.EMPTY;
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(UnusedPrivateParameter unused) {
    return new ReadRequest();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private ReadRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10:
            {
              String s = input.readStringRequireUtf8();

              session_ = s;
              break;
            }
          case 18:
            {
              TransactionSelector.Builder subBuilder = null;
              if (transaction_ != null) {
                subBuilder = transaction_.toBuilder();
              }
              transaction_ = input.readMessage(TransactionSelector.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transaction_);
                transaction_ = subBuilder.buildPartial();
              }

              break;
            }
          case 26:
            {
              String s = input.readStringRequireUtf8();

              table_ = s;
              break;
            }
          case 34:
            {
              String s = input.readStringRequireUtf8();

              index_ = s;
              break;
            }
          case 42:
            {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                columns_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              columns_.add(s);
              break;
            }
          case 50:
            {
              KeySet.Builder subBuilder = null;
              if (keySet_ != null) {
                subBuilder = keySet_.toBuilder();
              }
              keySet_ = input.readMessage(KeySet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(keySet_);
                keySet_ = subBuilder.buildPartial();
              }

              break;
            }
          case 64:
            {
              limit_ = input.readInt64();
              break;
            }
          case 74:
            {
              resumeToken_ = input.readBytes();
              break;
            }
          case 82:
            {
              partitionToken_ = input.readBytes();
              break;
            }
          case 90:
            {
              RequestOptions.Builder subBuilder = null;
              if (requestOptions_ != null) {
                subBuilder = requestOptions_.toBuilder();
              }
              requestOptions_ = input.readMessage(RequestOptions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(requestOptions_);
                requestOptions_ = subBuilder.buildPartial();
              }

              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        columns_ = columns_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return SpannerProto.internal_static_google_spanner_v1_ReadRequest_descriptor;
  }

  @Override
  protected FieldAccessorTable internalGetFieldAccessorTable() {
    return SpannerProto.internal_static_google_spanner_v1_ReadRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(ReadRequest.class, Builder.class);
  }

  public static final int SESSION_FIELD_NUMBER = 1;
  private volatile Object session_;
  /**
   *
   *
   * <pre>
   * Required. The session in which the read should be performed.
   * </pre>
   *
   * <code>
   * string session = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The session.
   */
  @Override
  public String getSession() {
    Object ref = session_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      session_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Required. The session in which the read should be performed.
   * </pre>
   *
   * <code>
   * string session = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for session.
   */
  @Override
  public com.google.protobuf.ByteString getSessionBytes() {
    Object ref = session_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String) ref);
      session_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TRANSACTION_FIELD_NUMBER = 2;
  private TransactionSelector transaction_;
  /**
   *
   *
   * <pre>
   * The transaction to use. If none is provided, the default is a
   * temporary read-only transaction with strong concurrency.
   * </pre>
   *
   * <code>.google.spanner.v1.TransactionSelector transaction = 2;</code>
   *
   * @return Whether the transaction field is set.
   */
  @Override
  public boolean hasTransaction() {
    return transaction_ != null;
  }
  /**
   *
   *
   * <pre>
   * The transaction to use. If none is provided, the default is a
   * temporary read-only transaction with strong concurrency.
   * </pre>
   *
   * <code>.google.spanner.v1.TransactionSelector transaction = 2;</code>
   *
   * @return The transaction.
   */
  @Override
  public TransactionSelector getTransaction() {
    return transaction_ == null ? TransactionSelector.getDefaultInstance() : transaction_;
  }
  /**
   *
   *
   * <pre>
   * The transaction to use. If none is provided, the default is a
   * temporary read-only transaction with strong concurrency.
   * </pre>
   *
   * <code>.google.spanner.v1.TransactionSelector transaction = 2;</code>
   */
  @Override
  public TransactionSelectorOrBuilder getTransactionOrBuilder() {
    return getTransaction();
  }

  public static final int TABLE_FIELD_NUMBER = 3;
  private volatile Object table_;
  /**
   *
   *
   * <pre>
   * Required. The name of the table in the database to be read.
   * </pre>
   *
   * <code>string table = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The table.
   */
  @Override
  public String getTable() {
    Object ref = table_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      table_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Required. The name of the table in the database to be read.
   * </pre>
   *
   * <code>string table = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for table.
   */
  @Override
  public com.google.protobuf.ByteString getTableBytes() {
    Object ref = table_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String) ref);
      table_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INDEX_FIELD_NUMBER = 4;
  private volatile Object index_;
  /**
   *
   *
   * <pre>
   * If non-empty, the name of an index on [table][google.spanner.v1.ReadRequest.table]. This index is
   * used instead of the table primary key when interpreting [key_set][google.spanner.v1.ReadRequest.key_set]
   * and sorting result rows. See [key_set][google.spanner.v1.ReadRequest.key_set] for further information.
   * </pre>
   *
   * <code>string index = 4;</code>
   *
   * @return The index.
   */
  @Override
  public String getIndex() {
    Object ref = index_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      index_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * If non-empty, the name of an index on [table][google.spanner.v1.ReadRequest.table]. This index is
   * used instead of the table primary key when interpreting [key_set][google.spanner.v1.ReadRequest.key_set]
   * and sorting result rows. See [key_set][google.spanner.v1.ReadRequest.key_set] for further information.
   * </pre>
   *
   * <code>string index = 4;</code>
   *
   * @return The bytes for index.
   */
  @Override
  public com.google.protobuf.ByteString getIndexBytes() {
    Object ref = index_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String) ref);
      index_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COLUMNS_FIELD_NUMBER = 5;
  private com.google.protobuf.LazyStringList columns_;
  /**
   *
   *
   * <pre>
   * Required. The columns of [table][google.spanner.v1.ReadRequest.table] to be returned for each row matching
   * this request.
   * </pre>
   *
   * <code>repeated string columns = 5 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return A list containing the columns.
   */
  public com.google.protobuf.ProtocolStringList getColumnsList() {
    return columns_;
  }
  /**
   *
   *
   * <pre>
   * Required. The columns of [table][google.spanner.v1.ReadRequest.table] to be returned for each row matching
   * this request.
   * </pre>
   *
   * <code>repeated string columns = 5 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The count of columns.
   */
  public int getColumnsCount() {
    return columns_.size();
  }
  /**
   *
   *
   * <pre>
   * Required. The columns of [table][google.spanner.v1.ReadRequest.table] to be returned for each row matching
   * this request.
   * </pre>
   *
   * <code>repeated string columns = 5 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @param index The index of the element to return.
   * @return The columns at the given index.
   */
  public String getColumns(int index) {
    return columns_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Required. The columns of [table][google.spanner.v1.ReadRequest.table] to be returned for each row matching
   * this request.
   * </pre>
   *
   * <code>repeated string columns = 5 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the columns at the given index.
   */
  public com.google.protobuf.ByteString getColumnsBytes(int index) {
    return columns_.getByteString(index);
  }

  public static final int KEY_SET_FIELD_NUMBER = 6;
  private KeySet keySet_;
  /**
   *
   *
   * <pre>
   * Required. `key_set` identifies the rows to be yielded. `key_set` names the
   * primary keys of the rows in [table][google.spanner.v1.ReadRequest.table] to be yielded, unless [index][google.spanner.v1.ReadRequest.index]
   * is present. If [index][google.spanner.v1.ReadRequest.index] is present, then [key_set][google.spanner.v1.ReadRequest.key_set] instead names
   * index keys in [index][google.spanner.v1.ReadRequest.index].
   * If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is empty, rows are yielded
   * in table primary key order (if [index][google.spanner.v1.ReadRequest.index] is empty) or index key order
   * (if [index][google.spanner.v1.ReadRequest.index] is non-empty).  If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is not
   * empty, rows will be yielded in an unspecified order.
   * It is not an error for the `key_set` to name rows that do not
   * exist in the database. Read yields nothing for nonexistent rows.
   * </pre>
   *
   * <code>.google.spanner.v1.KeySet key_set = 6 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return Whether the keySet field is set.
   */
  @Override
  public boolean hasKeySet() {
    return keySet_ != null;
  }
  /**
   *
   *
   * <pre>
   * Required. `key_set` identifies the rows to be yielded. `key_set` names the
   * primary keys of the rows in [table][google.spanner.v1.ReadRequest.table] to be yielded, unless [index][google.spanner.v1.ReadRequest.index]
   * is present. If [index][google.spanner.v1.ReadRequest.index] is present, then [key_set][google.spanner.v1.ReadRequest.key_set] instead names
   * index keys in [index][google.spanner.v1.ReadRequest.index].
   * If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is empty, rows are yielded
   * in table primary key order (if [index][google.spanner.v1.ReadRequest.index] is empty) or index key order
   * (if [index][google.spanner.v1.ReadRequest.index] is non-empty).  If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is not
   * empty, rows will be yielded in an unspecified order.
   * It is not an error for the `key_set` to name rows that do not
   * exist in the database. Read yields nothing for nonexistent rows.
   * </pre>
   *
   * <code>.google.spanner.v1.KeySet key_set = 6 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The keySet.
   */
  @Override
  public KeySet getKeySet() {
    return keySet_ == null ? KeySet.getDefaultInstance() : keySet_;
  }
  /**
   *
   *
   * <pre>
   * Required. `key_set` identifies the rows to be yielded. `key_set` names the
   * primary keys of the rows in [table][google.spanner.v1.ReadRequest.table] to be yielded, unless [index][google.spanner.v1.ReadRequest.index]
   * is present. If [index][google.spanner.v1.ReadRequest.index] is present, then [key_set][google.spanner.v1.ReadRequest.key_set] instead names
   * index keys in [index][google.spanner.v1.ReadRequest.index].
   * If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is empty, rows are yielded
   * in table primary key order (if [index][google.spanner.v1.ReadRequest.index] is empty) or index key order
   * (if [index][google.spanner.v1.ReadRequest.index] is non-empty).  If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is not
   * empty, rows will be yielded in an unspecified order.
   * It is not an error for the `key_set` to name rows that do not
   * exist in the database. Read yields nothing for nonexistent rows.
   * </pre>
   *
   * <code>.google.spanner.v1.KeySet key_set = 6 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @Override
  public KeySetOrBuilder getKeySetOrBuilder() {
    return getKeySet();
  }

  public static final int LIMIT_FIELD_NUMBER = 8;
  private long limit_;
  /**
   *
   *
   * <pre>
   * If greater than zero, only the first `limit` rows are yielded. If `limit`
   * is zero, the default is no limit. A limit cannot be specified if
   * `partition_token` is set.
   * </pre>
   *
   * <code>int64 limit = 8;</code>
   *
   * @return The limit.
   */
  @Override
  public long getLimit() {
    return limit_;
  }

  public static final int RESUME_TOKEN_FIELD_NUMBER = 9;
  private com.google.protobuf.ByteString resumeToken_;
  /**
   *
   *
   * <pre>
   * If this request is resuming a previously interrupted read,
   * `resume_token` should be copied from the last
   * [PartialResultSet][google.spanner.v1.PartialResultSet] yielded before the interruption. Doing this
   * enables the new read to resume where the last read left off. The
   * rest of the request parameters must exactly match the request
   * that yielded this token.
   * </pre>
   *
   * <code>bytes resume_token = 9;</code>
   *
   * @return The resumeToken.
   */
  @Override
  public com.google.protobuf.ByteString getResumeToken() {
    return resumeToken_;
  }

  public static final int PARTITION_TOKEN_FIELD_NUMBER = 10;
  private com.google.protobuf.ByteString partitionToken_;
  /**
   *
   *
   * <pre>
   * If present, results will be restricted to the specified partition
   * previously created using PartitionRead().    There must be an exact
   * match for the values of fields common to this message and the
   * PartitionReadRequest message used to create this partition_token.
   * </pre>
   *
   * <code>bytes partition_token = 10;</code>
   *
   * @return The partitionToken.
   */
  @Override
  public com.google.protobuf.ByteString getPartitionToken() {
    return partitionToken_;
  }

  public static final int REQUEST_OPTIONS_FIELD_NUMBER = 11;
  private RequestOptions requestOptions_;
  /**
   *
   *
   * <pre>
   * Common options for this request.
   * </pre>
   *
   * <code>.google.spanner.v1.RequestOptions request_options = 11;</code>
   *
   * @return Whether the requestOptions field is set.
   */
  @Override
  public boolean hasRequestOptions() {
    return requestOptions_ != null;
  }
  /**
   *
   *
   * <pre>
   * Common options for this request.
   * </pre>
   *
   * <code>.google.spanner.v1.RequestOptions request_options = 11;</code>
   *
   * @return The requestOptions.
   */
  @Override
  public RequestOptions getRequestOptions() {
    return requestOptions_ == null ? RequestOptions.getDefaultInstance() : requestOptions_;
  }
  /**
   *
   *
   * <pre>
   * Common options for this request.
   * </pre>
   *
   * <code>.google.spanner.v1.RequestOptions request_options = 11;</code>
   */
  @Override
  public RequestOptionsOrBuilder getRequestOptionsOrBuilder() {
    return getRequestOptions();
  }

  private byte memoizedIsInitialized = -1;

  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!getSessionBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, session_);
    }
    if (transaction_ != null) {
      output.writeMessage(2, getTransaction());
    }
    if (!getTableBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, table_);
    }
    if (!getIndexBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, index_);
    }
    for (int i = 0; i < columns_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, columns_.getRaw(i));
    }
    if (keySet_ != null) {
      output.writeMessage(6, getKeySet());
    }
    if (limit_ != 0L) {
      output.writeInt64(8, limit_);
    }
    if (!resumeToken_.isEmpty()) {
      output.writeBytes(9, resumeToken_);
    }
    if (!partitionToken_.isEmpty()) {
      output.writeBytes(10, partitionToken_);
    }
    if (requestOptions_ != null) {
      output.writeMessage(11, getRequestOptions());
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getSessionBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, session_);
    }
    if (transaction_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getTransaction());
    }
    if (!getTableBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, table_);
    }
    if (!getIndexBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, index_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < columns_.size(); i++) {
        dataSize += computeStringSizeNoTag(columns_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getColumnsList().size();
    }
    if (keySet_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, getKeySet());
    }
    if (limit_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(8, limit_);
    }
    if (!resumeToken_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream.computeBytesSize(9, resumeToken_);
    }
    if (!partitionToken_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream.computeBytesSize(10, partitionToken_);
    }
    if (requestOptions_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(11, getRequestOptions());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof ReadRequest)) {
      return super.equals(obj);
    }
    ReadRequest other = (ReadRequest) obj;

    if (!getSession().equals(other.getSession())) return false;
    if (hasTransaction() != other.hasTransaction()) return false;
    if (hasTransaction()) {
      if (!getTransaction().equals(other.getTransaction())) return false;
    }
    if (!getTable().equals(other.getTable())) return false;
    if (!getIndex().equals(other.getIndex())) return false;
    if (!getColumnsList().equals(other.getColumnsList())) return false;
    if (hasKeySet() != other.hasKeySet()) return false;
    if (hasKeySet()) {
      if (!getKeySet().equals(other.getKeySet())) return false;
    }
    if (getLimit() != other.getLimit()) return false;
    if (!getResumeToken().equals(other.getResumeToken())) return false;
    if (!getPartitionToken().equals(other.getPartitionToken())) return false;
    if (hasRequestOptions() != other.hasRequestOptions()) return false;
    if (hasRequestOptions()) {
      if (!getRequestOptions().equals(other.getRequestOptions())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SESSION_FIELD_NUMBER;
    hash = (53 * hash) + getSession().hashCode();
    if (hasTransaction()) {
      hash = (37 * hash) + TRANSACTION_FIELD_NUMBER;
      hash = (53 * hash) + getTransaction().hashCode();
    }
    hash = (37 * hash) + TABLE_FIELD_NUMBER;
    hash = (53 * hash) + getTable().hashCode();
    hash = (37 * hash) + INDEX_FIELD_NUMBER;
    hash = (53 * hash) + getIndex().hashCode();
    if (getColumnsCount() > 0) {
      hash = (37 * hash) + COLUMNS_FIELD_NUMBER;
      hash = (53 * hash) + getColumnsList().hashCode();
    }
    if (hasKeySet()) {
      hash = (37 * hash) + KEY_SET_FIELD_NUMBER;
      hash = (53 * hash) + getKeySet().hashCode();
    }
    hash = (37 * hash) + LIMIT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getLimit());
    hash = (37 * hash) + RESUME_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getResumeToken().hashCode();
    hash = (37 * hash) + PARTITION_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getPartitionToken().hashCode();
    if (hasRequestOptions()) {
      hash = (37 * hash) + REQUEST_OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getRequestOptions().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ReadRequest parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static ReadRequest parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static ReadRequest parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static ReadRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static ReadRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static ReadRequest parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static ReadRequest parseFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static ReadRequest parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static ReadRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static ReadRequest parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static ReadRequest parseFrom(com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static ReadRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(ReadRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * The request for [Read][google.spanner.v1.Spanner.Read] and
   * [StreamingRead][google.spanner.v1.Spanner.StreamingRead].
   * </pre>
   *
   * Protobuf type {@code google.spanner.v1.ReadRequest}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.spanner.v1.ReadRequest)
      ReadRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return SpannerProto.internal_static_google_spanner_v1_ReadRequest_descriptor;
    }

    @Override
    protected FieldAccessorTable internalGetFieldAccessorTable() {
      return SpannerProto.internal_static_google_spanner_v1_ReadRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(ReadRequest.class, Builder.class);
    }

    // Construct using com.google.spanner.v1.ReadRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @Override
    public Builder clear() {
      super.clear();
      session_ = "";

      if (transactionBuilder_ == null) {
        transaction_ = null;
      } else {
        transaction_ = null;
        transactionBuilder_ = null;
      }
      table_ = "";

      index_ = "";

      columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      if (keySetBuilder_ == null) {
        keySet_ = null;
      } else {
        keySet_ = null;
        keySetBuilder_ = null;
      }
      limit_ = 0L;

      resumeToken_ = com.google.protobuf.ByteString.EMPTY;

      partitionToken_ = com.google.protobuf.ByteString.EMPTY;

      if (requestOptionsBuilder_ == null) {
        requestOptions_ = null;
      } else {
        requestOptions_ = null;
        requestOptionsBuilder_ = null;
      }
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return SpannerProto.internal_static_google_spanner_v1_ReadRequest_descriptor;
    }

    @Override
    public ReadRequest getDefaultInstanceForType() {
      return ReadRequest.getDefaultInstance();
    }

    @Override
    public ReadRequest build() {
      ReadRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public ReadRequest buildPartial() {
      ReadRequest result = new ReadRequest(this);
      int from_bitField0_ = bitField0_;
      result.session_ = session_;
      if (transactionBuilder_ == null) {
        result.transaction_ = transaction_;
      } else {
        result.transaction_ = transactionBuilder_.build();
      }
      result.table_ = table_;
      result.index_ = index_;
      if (((bitField0_ & 0x00000001) != 0)) {
        columns_ = columns_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.columns_ = columns_;
      if (keySetBuilder_ == null) {
        result.keySet_ = keySet_;
      } else {
        result.keySet_ = keySetBuilder_.build();
      }
      result.limit_ = limit_;
      result.resumeToken_ = resumeToken_;
      result.partitionToken_ = partitionToken_;
      if (requestOptionsBuilder_ == null) {
        result.requestOptions_ = requestOptions_;
      } else {
        result.requestOptions_ = requestOptionsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }

    @Override
    public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
      return super.setField(field, value);
    }

    @Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
      return super.addRepeatedField(field, value);
    }

    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ReadRequest) {
        return mergeFrom((ReadRequest) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ReadRequest other) {
      if (other == ReadRequest.getDefaultInstance()) return this;
      if (!other.getSession().isEmpty()) {
        session_ = other.session_;
        onChanged();
      }
      if (other.hasTransaction()) {
        mergeTransaction(other.getTransaction());
      }
      if (!other.getTable().isEmpty()) {
        table_ = other.table_;
        onChanged();
      }
      if (!other.getIndex().isEmpty()) {
        index_ = other.index_;
        onChanged();
      }
      if (!other.columns_.isEmpty()) {
        if (columns_.isEmpty()) {
          columns_ = other.columns_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureColumnsIsMutable();
          columns_.addAll(other.columns_);
        }
        onChanged();
      }
      if (other.hasKeySet()) {
        mergeKeySet(other.getKeySet());
      }
      if (other.getLimit() != 0L) {
        setLimit(other.getLimit());
      }
      if (other.getResumeToken() != com.google.protobuf.ByteString.EMPTY) {
        setResumeToken(other.getResumeToken());
      }
      if (other.getPartitionToken() != com.google.protobuf.ByteString.EMPTY) {
        setPartitionToken(other.getPartitionToken());
      }
      if (other.hasRequestOptions()) {
        mergeRequestOptions(other.getRequestOptions());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      ReadRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (ReadRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int bitField0_;

    private Object session_ = "";
    /**
     *
     *
     * <pre>
     * Required. The session in which the read should be performed.
     * </pre>
     *
     * <code>
     * string session = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The session.
     */
    public String getSession() {
      Object ref = session_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        session_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The session in which the read should be performed.
     * </pre>
     *
     * <code>
     * string session = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The bytes for session.
     */
    public com.google.protobuf.ByteString getSessionBytes() {
      Object ref = session_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        session_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The session in which the read should be performed.
     * </pre>
     *
     * <code>
     * string session = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The session to set.
     * @return This builder for chaining.
     */
    public Builder setSession(String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      session_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The session in which the read should be performed.
     * </pre>
     *
     * <code>
     * string session = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSession() {

      session_ = getDefaultInstance().getSession();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The session in which the read should be performed.
     * </pre>
     *
     * <code>
     * string session = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The bytes for session to set.
     * @return This builder for chaining.
     */
    public Builder setSessionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      session_ = value;
      onChanged();
      return this;
    }

    private TransactionSelector transaction_;
    private com.google.protobuf.SingleFieldBuilderV3<
            TransactionSelector, TransactionSelector.Builder, TransactionSelectorOrBuilder>
        transactionBuilder_;
    /**
     *
     *
     * <pre>
     * The transaction to use. If none is provided, the default is a
     * temporary read-only transaction with strong concurrency.
     * </pre>
     *
     * <code>.google.spanner.v1.TransactionSelector transaction = 2;</code>
     *
     * @return Whether the transaction field is set.
     */
    public boolean hasTransaction() {
      return transactionBuilder_ != null || transaction_ != null;
    }
    /**
     *
     *
     * <pre>
     * The transaction to use. If none is provided, the default is a
     * temporary read-only transaction with strong concurrency.
     * </pre>
     *
     * <code>.google.spanner.v1.TransactionSelector transaction = 2;</code>
     *
     * @return The transaction.
     */
    public TransactionSelector getTransaction() {
      if (transactionBuilder_ == null) {
        return transaction_ == null ? TransactionSelector.getDefaultInstance() : transaction_;
      } else {
        return transactionBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The transaction to use. If none is provided, the default is a
     * temporary read-only transaction with strong concurrency.
     * </pre>
     *
     * <code>.google.spanner.v1.TransactionSelector transaction = 2;</code>
     */
    public Builder setTransaction(TransactionSelector value) {
      if (transactionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        transaction_ = value;
        onChanged();
      } else {
        transactionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The transaction to use. If none is provided, the default is a
     * temporary read-only transaction with strong concurrency.
     * </pre>
     *
     * <code>.google.spanner.v1.TransactionSelector transaction = 2;</code>
     */
    public Builder setTransaction(TransactionSelector.Builder builderForValue) {
      if (transactionBuilder_ == null) {
        transaction_ = builderForValue.build();
        onChanged();
      } else {
        transactionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The transaction to use. If none is provided, the default is a
     * temporary read-only transaction with strong concurrency.
     * </pre>
     *
     * <code>.google.spanner.v1.TransactionSelector transaction = 2;</code>
     */
    public Builder mergeTransaction(TransactionSelector value) {
      if (transactionBuilder_ == null) {
        if (transaction_ != null) {
          transaction_ =
              TransactionSelector.newBuilder(transaction_).mergeFrom(value).buildPartial();
        } else {
          transaction_ = value;
        }
        onChanged();
      } else {
        transactionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The transaction to use. If none is provided, the default is a
     * temporary read-only transaction with strong concurrency.
     * </pre>
     *
     * <code>.google.spanner.v1.TransactionSelector transaction = 2;</code>
     */
    public Builder clearTransaction() {
      if (transactionBuilder_ == null) {
        transaction_ = null;
        onChanged();
      } else {
        transaction_ = null;
        transactionBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The transaction to use. If none is provided, the default is a
     * temporary read-only transaction with strong concurrency.
     * </pre>
     *
     * <code>.google.spanner.v1.TransactionSelector transaction = 2;</code>
     */
    public TransactionSelector.Builder getTransactionBuilder() {

      onChanged();
      return getTransactionFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The transaction to use. If none is provided, the default is a
     * temporary read-only transaction with strong concurrency.
     * </pre>
     *
     * <code>.google.spanner.v1.TransactionSelector transaction = 2;</code>
     */
    public TransactionSelectorOrBuilder getTransactionOrBuilder() {
      if (transactionBuilder_ != null) {
        return transactionBuilder_.getMessageOrBuilder();
      } else {
        return transaction_ == null ? TransactionSelector.getDefaultInstance() : transaction_;
      }
    }
    /**
     *
     *
     * <pre>
     * The transaction to use. If none is provided, the default is a
     * temporary read-only transaction with strong concurrency.
     * </pre>
     *
     * <code>.google.spanner.v1.TransactionSelector transaction = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            TransactionSelector, TransactionSelector.Builder, TransactionSelectorOrBuilder>
        getTransactionFieldBuilder() {
      if (transactionBuilder_ == null) {
        transactionBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                TransactionSelector, TransactionSelector.Builder, TransactionSelectorOrBuilder>(
                getTransaction(), getParentForChildren(), isClean());
        transaction_ = null;
      }
      return transactionBuilder_;
    }

    private Object table_ = "";
    /**
     *
     *
     * <pre>
     * Required. The name of the table in the database to be read.
     * </pre>
     *
     * <code>string table = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The table.
     */
    public String getTable() {
      Object ref = table_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        table_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The name of the table in the database to be read.
     * </pre>
     *
     * <code>string table = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for table.
     */
    public com.google.protobuf.ByteString getTableBytes() {
      Object ref = table_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        table_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The name of the table in the database to be read.
     * </pre>
     *
     * <code>string table = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The table to set.
     * @return This builder for chaining.
     */
    public Builder setTable(String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      table_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The name of the table in the database to be read.
     * </pre>
     *
     * <code>string table = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTable() {

      table_ = getDefaultInstance().getTable();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The name of the table in the database to be read.
     * </pre>
     *
     * <code>string table = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The bytes for table to set.
     * @return This builder for chaining.
     */
    public Builder setTableBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      table_ = value;
      onChanged();
      return this;
    }

    private Object index_ = "";
    /**
     *
     *
     * <pre>
     * If non-empty, the name of an index on [table][google.spanner.v1.ReadRequest.table]. This index is
     * used instead of the table primary key when interpreting [key_set][google.spanner.v1.ReadRequest.key_set]
     * and sorting result rows. See [key_set][google.spanner.v1.ReadRequest.key_set] for further information.
     * </pre>
     *
     * <code>string index = 4;</code>
     *
     * @return The index.
     */
    public String getIndex() {
      Object ref = index_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        index_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * If non-empty, the name of an index on [table][google.spanner.v1.ReadRequest.table]. This index is
     * used instead of the table primary key when interpreting [key_set][google.spanner.v1.ReadRequest.key_set]
     * and sorting result rows. See [key_set][google.spanner.v1.ReadRequest.key_set] for further information.
     * </pre>
     *
     * <code>string index = 4;</code>
     *
     * @return The bytes for index.
     */
    public com.google.protobuf.ByteString getIndexBytes() {
      Object ref = index_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        index_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * If non-empty, the name of an index on [table][google.spanner.v1.ReadRequest.table]. This index is
     * used instead of the table primary key when interpreting [key_set][google.spanner.v1.ReadRequest.key_set]
     * and sorting result rows. See [key_set][google.spanner.v1.ReadRequest.key_set] for further information.
     * </pre>
     *
     * <code>string index = 4;</code>
     *
     * @param value The index to set.
     * @return This builder for chaining.
     */
    public Builder setIndex(String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      index_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * If non-empty, the name of an index on [table][google.spanner.v1.ReadRequest.table]. This index is
     * used instead of the table primary key when interpreting [key_set][google.spanner.v1.ReadRequest.key_set]
     * and sorting result rows. See [key_set][google.spanner.v1.ReadRequest.key_set] for further information.
     * </pre>
     *
     * <code>string index = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIndex() {

      index_ = getDefaultInstance().getIndex();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * If non-empty, the name of an index on [table][google.spanner.v1.ReadRequest.table]. This index is
     * used instead of the table primary key when interpreting [key_set][google.spanner.v1.ReadRequest.key_set]
     * and sorting result rows. See [key_set][google.spanner.v1.ReadRequest.key_set] for further information.
     * </pre>
     *
     * <code>string index = 4;</code>
     *
     * @param value The bytes for index to set.
     * @return This builder for chaining.
     */
    public Builder setIndexBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      index_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList columns_ =
        com.google.protobuf.LazyStringArrayList.EMPTY;

    private void ensureColumnsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        columns_ = new com.google.protobuf.LazyStringArrayList(columns_);
        bitField0_ |= 0x00000001;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The columns of [table][google.spanner.v1.ReadRequest.table] to be returned for each row matching
     * this request.
     * </pre>
     *
     * <code>repeated string columns = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return A list containing the columns.
     */
    public com.google.protobuf.ProtocolStringList getColumnsList() {
      return columns_.getUnmodifiableView();
    }
    /**
     *
     *
     * <pre>
     * Required. The columns of [table][google.spanner.v1.ReadRequest.table] to be returned for each row matching
     * this request.
     * </pre>
     *
     * <code>repeated string columns = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The count of columns.
     */
    public int getColumnsCount() {
      return columns_.size();
    }
    /**
     *
     *
     * <pre>
     * Required. The columns of [table][google.spanner.v1.ReadRequest.table] to be returned for each row matching
     * this request.
     * </pre>
     *
     * <code>repeated string columns = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param index The index of the element to return.
     * @return The columns at the given index.
     */
    public String getColumns(int index) {
      return columns_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Required. The columns of [table][google.spanner.v1.ReadRequest.table] to be returned for each row matching
     * this request.
     * </pre>
     *
     * <code>repeated string columns = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the columns at the given index.
     */
    public com.google.protobuf.ByteString getColumnsBytes(int index) {
      return columns_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * Required. The columns of [table][google.spanner.v1.ReadRequest.table] to be returned for each row matching
     * this request.
     * </pre>
     *
     * <code>repeated string columns = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param index The index to set the value at.
     * @param value The columns to set.
     * @return This builder for chaining.
     */
    public Builder setColumns(int index, String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureColumnsIsMutable();
      columns_.set(index, value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The columns of [table][google.spanner.v1.ReadRequest.table] to be returned for each row matching
     * this request.
     * </pre>
     *
     * <code>repeated string columns = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The columns to add.
     * @return This builder for chaining.
     */
    public Builder addColumns(String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureColumnsIsMutable();
      columns_.add(value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The columns of [table][google.spanner.v1.ReadRequest.table] to be returned for each row matching
     * this request.
     * </pre>
     *
     * <code>repeated string columns = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param values The columns to add.
     * @return This builder for chaining.
     */
    public Builder addAllColumns(Iterable<String> values) {
      ensureColumnsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, columns_);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The columns of [table][google.spanner.v1.ReadRequest.table] to be returned for each row matching
     * this request.
     * </pre>
     *
     * <code>repeated string columns = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearColumns() {
      columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The columns of [table][google.spanner.v1.ReadRequest.table] to be returned for each row matching
     * this request.
     * </pre>
     *
     * <code>repeated string columns = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The bytes of the columns to add.
     * @return This builder for chaining.
     */
    public Builder addColumnsBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureColumnsIsMutable();
      columns_.add(value);
      onChanged();
      return this;
    }

    private KeySet keySet_;
    private com.google.protobuf.SingleFieldBuilderV3<KeySet, KeySet.Builder, KeySetOrBuilder>
        keySetBuilder_;
    /**
     *
     *
     * <pre>
     * Required. `key_set` identifies the rows to be yielded. `key_set` names the
     * primary keys of the rows in [table][google.spanner.v1.ReadRequest.table] to be yielded, unless [index][google.spanner.v1.ReadRequest.index]
     * is present. If [index][google.spanner.v1.ReadRequest.index] is present, then [key_set][google.spanner.v1.ReadRequest.key_set] instead names
     * index keys in [index][google.spanner.v1.ReadRequest.index].
     * If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is empty, rows are yielded
     * in table primary key order (if [index][google.spanner.v1.ReadRequest.index] is empty) or index key order
     * (if [index][google.spanner.v1.ReadRequest.index] is non-empty).  If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is not
     * empty, rows will be yielded in an unspecified order.
     * It is not an error for the `key_set` to name rows that do not
     * exist in the database. Read yields nothing for nonexistent rows.
     * </pre>
     *
     * <code>.google.spanner.v1.KeySet key_set = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return Whether the keySet field is set.
     */
    public boolean hasKeySet() {
      return keySetBuilder_ != null || keySet_ != null;
    }
    /**
     *
     *
     * <pre>
     * Required. `key_set` identifies the rows to be yielded. `key_set` names the
     * primary keys of the rows in [table][google.spanner.v1.ReadRequest.table] to be yielded, unless [index][google.spanner.v1.ReadRequest.index]
     * is present. If [index][google.spanner.v1.ReadRequest.index] is present, then [key_set][google.spanner.v1.ReadRequest.key_set] instead names
     * index keys in [index][google.spanner.v1.ReadRequest.index].
     * If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is empty, rows are yielded
     * in table primary key order (if [index][google.spanner.v1.ReadRequest.index] is empty) or index key order
     * (if [index][google.spanner.v1.ReadRequest.index] is non-empty).  If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is not
     * empty, rows will be yielded in an unspecified order.
     * It is not an error for the `key_set` to name rows that do not
     * exist in the database. Read yields nothing for nonexistent rows.
     * </pre>
     *
     * <code>.google.spanner.v1.KeySet key_set = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The keySet.
     */
    public KeySet getKeySet() {
      if (keySetBuilder_ == null) {
        return keySet_ == null ? KeySet.getDefaultInstance() : keySet_;
      } else {
        return keySetBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Required. `key_set` identifies the rows to be yielded. `key_set` names the
     * primary keys of the rows in [table][google.spanner.v1.ReadRequest.table] to be yielded, unless [index][google.spanner.v1.ReadRequest.index]
     * is present. If [index][google.spanner.v1.ReadRequest.index] is present, then [key_set][google.spanner.v1.ReadRequest.key_set] instead names
     * index keys in [index][google.spanner.v1.ReadRequest.index].
     * If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is empty, rows are yielded
     * in table primary key order (if [index][google.spanner.v1.ReadRequest.index] is empty) or index key order
     * (if [index][google.spanner.v1.ReadRequest.index] is non-empty).  If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is not
     * empty, rows will be yielded in an unspecified order.
     * It is not an error for the `key_set` to name rows that do not
     * exist in the database. Read yields nothing for nonexistent rows.
     * </pre>
     *
     * <code>.google.spanner.v1.KeySet key_set = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setKeySet(KeySet value) {
      if (keySetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        keySet_ = value;
        onChanged();
      } else {
        keySetBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. `key_set` identifies the rows to be yielded. `key_set` names the
     * primary keys of the rows in [table][google.spanner.v1.ReadRequest.table] to be yielded, unless [index][google.spanner.v1.ReadRequest.index]
     * is present. If [index][google.spanner.v1.ReadRequest.index] is present, then [key_set][google.spanner.v1.ReadRequest.key_set] instead names
     * index keys in [index][google.spanner.v1.ReadRequest.index].
     * If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is empty, rows are yielded
     * in table primary key order (if [index][google.spanner.v1.ReadRequest.index] is empty) or index key order
     * (if [index][google.spanner.v1.ReadRequest.index] is non-empty).  If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is not
     * empty, rows will be yielded in an unspecified order.
     * It is not an error for the `key_set` to name rows that do not
     * exist in the database. Read yields nothing for nonexistent rows.
     * </pre>
     *
     * <code>.google.spanner.v1.KeySet key_set = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setKeySet(KeySet.Builder builderForValue) {
      if (keySetBuilder_ == null) {
        keySet_ = builderForValue.build();
        onChanged();
      } else {
        keySetBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. `key_set` identifies the rows to be yielded. `key_set` names the
     * primary keys of the rows in [table][google.spanner.v1.ReadRequest.table] to be yielded, unless [index][google.spanner.v1.ReadRequest.index]
     * is present. If [index][google.spanner.v1.ReadRequest.index] is present, then [key_set][google.spanner.v1.ReadRequest.key_set] instead names
     * index keys in [index][google.spanner.v1.ReadRequest.index].
     * If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is empty, rows are yielded
     * in table primary key order (if [index][google.spanner.v1.ReadRequest.index] is empty) or index key order
     * (if [index][google.spanner.v1.ReadRequest.index] is non-empty).  If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is not
     * empty, rows will be yielded in an unspecified order.
     * It is not an error for the `key_set` to name rows that do not
     * exist in the database. Read yields nothing for nonexistent rows.
     * </pre>
     *
     * <code>.google.spanner.v1.KeySet key_set = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder mergeKeySet(KeySet value) {
      if (keySetBuilder_ == null) {
        if (keySet_ != null) {
          keySet_ = KeySet.newBuilder(keySet_).mergeFrom(value).buildPartial();
        } else {
          keySet_ = value;
        }
        onChanged();
      } else {
        keySetBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. `key_set` identifies the rows to be yielded. `key_set` names the
     * primary keys of the rows in [table][google.spanner.v1.ReadRequest.table] to be yielded, unless [index][google.spanner.v1.ReadRequest.index]
     * is present. If [index][google.spanner.v1.ReadRequest.index] is present, then [key_set][google.spanner.v1.ReadRequest.key_set] instead names
     * index keys in [index][google.spanner.v1.ReadRequest.index].
     * If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is empty, rows are yielded
     * in table primary key order (if [index][google.spanner.v1.ReadRequest.index] is empty) or index key order
     * (if [index][google.spanner.v1.ReadRequest.index] is non-empty).  If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is not
     * empty, rows will be yielded in an unspecified order.
     * It is not an error for the `key_set` to name rows that do not
     * exist in the database. Read yields nothing for nonexistent rows.
     * </pre>
     *
     * <code>.google.spanner.v1.KeySet key_set = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearKeySet() {
      if (keySetBuilder_ == null) {
        keySet_ = null;
        onChanged();
      } else {
        keySet_ = null;
        keySetBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. `key_set` identifies the rows to be yielded. `key_set` names the
     * primary keys of the rows in [table][google.spanner.v1.ReadRequest.table] to be yielded, unless [index][google.spanner.v1.ReadRequest.index]
     * is present. If [index][google.spanner.v1.ReadRequest.index] is present, then [key_set][google.spanner.v1.ReadRequest.key_set] instead names
     * index keys in [index][google.spanner.v1.ReadRequest.index].
     * If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is empty, rows are yielded
     * in table primary key order (if [index][google.spanner.v1.ReadRequest.index] is empty) or index key order
     * (if [index][google.spanner.v1.ReadRequest.index] is non-empty).  If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is not
     * empty, rows will be yielded in an unspecified order.
     * It is not an error for the `key_set` to name rows that do not
     * exist in the database. Read yields nothing for nonexistent rows.
     * </pre>
     *
     * <code>.google.spanner.v1.KeySet key_set = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public KeySet.Builder getKeySetBuilder() {

      onChanged();
      return getKeySetFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Required. `key_set` identifies the rows to be yielded. `key_set` names the
     * primary keys of the rows in [table][google.spanner.v1.ReadRequest.table] to be yielded, unless [index][google.spanner.v1.ReadRequest.index]
     * is present. If [index][google.spanner.v1.ReadRequest.index] is present, then [key_set][google.spanner.v1.ReadRequest.key_set] instead names
     * index keys in [index][google.spanner.v1.ReadRequest.index].
     * If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is empty, rows are yielded
     * in table primary key order (if [index][google.spanner.v1.ReadRequest.index] is empty) or index key order
     * (if [index][google.spanner.v1.ReadRequest.index] is non-empty).  If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is not
     * empty, rows will be yielded in an unspecified order.
     * It is not an error for the `key_set` to name rows that do not
     * exist in the database. Read yields nothing for nonexistent rows.
     * </pre>
     *
     * <code>.google.spanner.v1.KeySet key_set = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public KeySetOrBuilder getKeySetOrBuilder() {
      if (keySetBuilder_ != null) {
        return keySetBuilder_.getMessageOrBuilder();
      } else {
        return keySet_ == null ? KeySet.getDefaultInstance() : keySet_;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. `key_set` identifies the rows to be yielded. `key_set` names the
     * primary keys of the rows in [table][google.spanner.v1.ReadRequest.table] to be yielded, unless [index][google.spanner.v1.ReadRequest.index]
     * is present. If [index][google.spanner.v1.ReadRequest.index] is present, then [key_set][google.spanner.v1.ReadRequest.key_set] instead names
     * index keys in [index][google.spanner.v1.ReadRequest.index].
     * If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is empty, rows are yielded
     * in table primary key order (if [index][google.spanner.v1.ReadRequest.index] is empty) or index key order
     * (if [index][google.spanner.v1.ReadRequest.index] is non-empty).  If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is not
     * empty, rows will be yielded in an unspecified order.
     * It is not an error for the `key_set` to name rows that do not
     * exist in the database. Read yields nothing for nonexistent rows.
     * </pre>
     *
     * <code>.google.spanner.v1.KeySet key_set = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<KeySet, KeySet.Builder, KeySetOrBuilder>
        getKeySetFieldBuilder() {
      if (keySetBuilder_ == null) {
        keySetBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<KeySet, KeySet.Builder, KeySetOrBuilder>(
                getKeySet(), getParentForChildren(), isClean());
        keySet_ = null;
      }
      return keySetBuilder_;
    }

    private long limit_;
    /**
     *
     *
     * <pre>
     * If greater than zero, only the first `limit` rows are yielded. If `limit`
     * is zero, the default is no limit. A limit cannot be specified if
     * `partition_token` is set.
     * </pre>
     *
     * <code>int64 limit = 8;</code>
     *
     * @return The limit.
     */
    @Override
    public long getLimit() {
      return limit_;
    }
    /**
     *
     *
     * <pre>
     * If greater than zero, only the first `limit` rows are yielded. If `limit`
     * is zero, the default is no limit. A limit cannot be specified if
     * `partition_token` is set.
     * </pre>
     *
     * <code>int64 limit = 8;</code>
     *
     * @param value The limit to set.
     * @return This builder for chaining.
     */
    public Builder setLimit(long value) {

      limit_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * If greater than zero, only the first `limit` rows are yielded. If `limit`
     * is zero, the default is no limit. A limit cannot be specified if
     * `partition_token` is set.
     * </pre>
     *
     * <code>int64 limit = 8;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLimit() {

      limit_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString resumeToken_ = com.google.protobuf.ByteString.EMPTY;
    /**
     *
     *
     * <pre>
     * If this request is resuming a previously interrupted read,
     * `resume_token` should be copied from the last
     * [PartialResultSet][google.spanner.v1.PartialResultSet] yielded before the interruption. Doing this
     * enables the new read to resume where the last read left off. The
     * rest of the request parameters must exactly match the request
     * that yielded this token.
     * </pre>
     *
     * <code>bytes resume_token = 9;</code>
     *
     * @return The resumeToken.
     */
    @Override
    public com.google.protobuf.ByteString getResumeToken() {
      return resumeToken_;
    }
    /**
     *
     *
     * <pre>
     * If this request is resuming a previously interrupted read,
     * `resume_token` should be copied from the last
     * [PartialResultSet][google.spanner.v1.PartialResultSet] yielded before the interruption. Doing this
     * enables the new read to resume where the last read left off. The
     * rest of the request parameters must exactly match the request
     * that yielded this token.
     * </pre>
     *
     * <code>bytes resume_token = 9;</code>
     *
     * @param value The resumeToken to set.
     * @return This builder for chaining.
     */
    public Builder setResumeToken(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }

      resumeToken_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * If this request is resuming a previously interrupted read,
     * `resume_token` should be copied from the last
     * [PartialResultSet][google.spanner.v1.PartialResultSet] yielded before the interruption. Doing this
     * enables the new read to resume where the last read left off. The
     * rest of the request parameters must exactly match the request
     * that yielded this token.
     * </pre>
     *
     * <code>bytes resume_token = 9;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearResumeToken() {

      resumeToken_ = getDefaultInstance().getResumeToken();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString partitionToken_ = com.google.protobuf.ByteString.EMPTY;
    /**
     *
     *
     * <pre>
     * If present, results will be restricted to the specified partition
     * previously created using PartitionRead().    There must be an exact
     * match for the values of fields common to this message and the
     * PartitionReadRequest message used to create this partition_token.
     * </pre>
     *
     * <code>bytes partition_token = 10;</code>
     *
     * @return The partitionToken.
     */
    @Override
    public com.google.protobuf.ByteString getPartitionToken() {
      return partitionToken_;
    }
    /**
     *
     *
     * <pre>
     * If present, results will be restricted to the specified partition
     * previously created using PartitionRead().    There must be an exact
     * match for the values of fields common to this message and the
     * PartitionReadRequest message used to create this partition_token.
     * </pre>
     *
     * <code>bytes partition_token = 10;</code>
     *
     * @param value The partitionToken to set.
     * @return This builder for chaining.
     */
    public Builder setPartitionToken(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }

      partitionToken_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * If present, results will be restricted to the specified partition
     * previously created using PartitionRead().    There must be an exact
     * match for the values of fields common to this message and the
     * PartitionReadRequest message used to create this partition_token.
     * </pre>
     *
     * <code>bytes partition_token = 10;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPartitionToken() {

      partitionToken_ = getDefaultInstance().getPartitionToken();
      onChanged();
      return this;
    }

    private RequestOptions requestOptions_;
    private com.google.protobuf.SingleFieldBuilderV3<
            RequestOptions, RequestOptions.Builder, RequestOptionsOrBuilder>
        requestOptionsBuilder_;
    /**
     *
     *
     * <pre>
     * Common options for this request.
     * </pre>
     *
     * <code>.google.spanner.v1.RequestOptions request_options = 11;</code>
     *
     * @return Whether the requestOptions field is set.
     */
    public boolean hasRequestOptions() {
      return requestOptionsBuilder_ != null || requestOptions_ != null;
    }
    /**
     *
     *
     * <pre>
     * Common options for this request.
     * </pre>
     *
     * <code>.google.spanner.v1.RequestOptions request_options = 11;</code>
     *
     * @return The requestOptions.
     */
    public RequestOptions getRequestOptions() {
      if (requestOptionsBuilder_ == null) {
        return requestOptions_ == null ? RequestOptions.getDefaultInstance() : requestOptions_;
      } else {
        return requestOptionsBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Common options for this request.
     * </pre>
     *
     * <code>.google.spanner.v1.RequestOptions request_options = 11;</code>
     */
    public Builder setRequestOptions(RequestOptions value) {
      if (requestOptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        requestOptions_ = value;
        onChanged();
      } else {
        requestOptionsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Common options for this request.
     * </pre>
     *
     * <code>.google.spanner.v1.RequestOptions request_options = 11;</code>
     */
    public Builder setRequestOptions(RequestOptions.Builder builderForValue) {
      if (requestOptionsBuilder_ == null) {
        requestOptions_ = builderForValue.build();
        onChanged();
      } else {
        requestOptionsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Common options for this request.
     * </pre>
     *
     * <code>.google.spanner.v1.RequestOptions request_options = 11;</code>
     */
    public Builder mergeRequestOptions(RequestOptions value) {
      if (requestOptionsBuilder_ == null) {
        if (requestOptions_ != null) {
          requestOptions_ =
              RequestOptions.newBuilder(requestOptions_).mergeFrom(value).buildPartial();
        } else {
          requestOptions_ = value;
        }
        onChanged();
      } else {
        requestOptionsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Common options for this request.
     * </pre>
     *
     * <code>.google.spanner.v1.RequestOptions request_options = 11;</code>
     */
    public Builder clearRequestOptions() {
      if (requestOptionsBuilder_ == null) {
        requestOptions_ = null;
        onChanged();
      } else {
        requestOptions_ = null;
        requestOptionsBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Common options for this request.
     * </pre>
     *
     * <code>.google.spanner.v1.RequestOptions request_options = 11;</code>
     */
    public RequestOptions.Builder getRequestOptionsBuilder() {

      onChanged();
      return getRequestOptionsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Common options for this request.
     * </pre>
     *
     * <code>.google.spanner.v1.RequestOptions request_options = 11;</code>
     */
    public RequestOptionsOrBuilder getRequestOptionsOrBuilder() {
      if (requestOptionsBuilder_ != null) {
        return requestOptionsBuilder_.getMessageOrBuilder();
      } else {
        return requestOptions_ == null ? RequestOptions.getDefaultInstance() : requestOptions_;
      }
    }
    /**
     *
     *
     * <pre>
     * Common options for this request.
     * </pre>
     *
     * <code>.google.spanner.v1.RequestOptions request_options = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            RequestOptions, RequestOptions.Builder, RequestOptionsOrBuilder>
        getRequestOptionsFieldBuilder() {
      if (requestOptionsBuilder_ == null) {
        requestOptionsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                RequestOptions, RequestOptions.Builder, RequestOptionsOrBuilder>(
                getRequestOptions(), getParentForChildren(), isClean());
        requestOptions_ = null;
      }
      return requestOptionsBuilder_;
    }

    @Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.spanner.v1.ReadRequest)
  }

  // @@protoc_insertion_point(class_scope:google.spanner.v1.ReadRequest)
  private static final ReadRequest DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new ReadRequest();
  }

  public static ReadRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ReadRequest> PARSER =
      new com.google.protobuf.AbstractParser<ReadRequest>() {
        @Override
        public ReadRequest parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReadRequest(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<ReadRequest> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<ReadRequest> getParserForType() {
    return PARSER;
  }

  @Override
  public ReadRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
